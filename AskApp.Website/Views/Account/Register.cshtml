@using AskApp.Website.Models
@model RegisterViewModel
@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
    ViewBag.Title = "Register your account";
}
@section stylesheets {
    @Styles.Render("~/Content/accountCss")
}

<div class="register-box">
    <div class="register-logo">
        <a href="/eAsk/"><b>e<b>ASK</b></b></a>
    </div>
    <div class="register-box-body">
        <p class="login-box-msg"><b>Register a new membership</b></p>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-xs-4">
                    <div class="kv-avatar center-block text-center" style="width:200px">
                        <input id="ProfileImage" name="ProfileImage" type="file" class="file-loading" />
                    </div>
                </div>
                <div class="col-xs-8">
                    <div class="form-group has-feedback">
                        <input type="text" class="form-control" name="firstname" placeholder="First name">
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        <input type="text" class="form-control" name="lastname" placeholder="Last name">
                        <span class="glyphicon glyphicon-home form-control-feedback"></span>
                    </div>

                    <div class="form-group has-feedback">
                        <input type="email" class="form-control" name="email" placeholder="Email">
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        <input type="text" class="form-control" name="phonenumber" placeholder="Phone number">
                        <span class="glyphicon glyphicon-phone form-control-feedback"></span>
                    </div>

                    <div class="form-group has-feedback">
                        <input type="password" class="form-control" name="password" placeholder="Password">
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        <input type="password" class="form-control" name="confirmpassword" placeholder="Retype password">
                        <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
                    </div>
                </div>
            </div>
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="row">
                <div class="col-xs-4 col-xs-offset-4">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(x => x.AgreeTerms)
                            I agree to the <a href="#">terms</a>
                        </label>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-xs-4 col-xs-offset-4">
                    <button type="submit" class="col btn btn-primary btn-block btn-flat">Register</button>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-xs-6 col-xs-offset-3">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })

                <div class="col-xs-8 col-xs-offset-2">
                    <a href="@Url.Action("Login","Account")" class="text-center">I already have an account</a>
                </div>
            </div>

        </div>

        <!-- /.form-box -->
    </div>
</div>
<!-- /.register-box -->
<!-- jQuery -->
@section Scripts {
    <link href="~/Scripts/plugins/bootstrap-fileinput/css/fileinput.min.css" rel="stylesheet" />
    <!-- piexif.min.js is only needed if you wish to resize images before upload to restore exif data.
         This must be loaded before fileinput.min.js -->
    <script src="~/Scripts/plugins/bootstrap-fileinput/js/plugins/piexif.js"></script>
    <!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview.
         This must be loaded before fileinput.min.js -->
    <script src="~/Scripts/plugins/bootstrap-fileinput/js/plugins/sortable.js"></script>
    <!-- purify.min.js is only needed if you wish to purify HTML content in your preview for HTML files.
         This must be loaded before fileinput.min.js -->
    <script src="~/Scripts/plugins/bootstrap-fileinput/js/plugins/purify.min.js"></script>
    <!-- the main fileinput plugin file -->
    <script src="~/Scripts/plugins/bootstrap-fileinput/js/fileinput.min.js"></script>

    @Scripts.Render("~/bundles/accountJs")

}
